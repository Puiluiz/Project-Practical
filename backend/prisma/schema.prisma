// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// prisma/schema.prisma
model User {
  id           Int            @id @default(autoincrement())
  username     String         @unique
  password     String
  email        String         @unique
  role         UserRole       @default(USER)
  balance      Float          @default(0)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  products      HistoryProduct[] // Relation to the HistoryProduct model
  topups       Historytopup[]   // Relation to the Historytopup model
}


enum UserRole {
  USER
  ADMIN
}


model Product1months {
  id       Int              @id @default(autoincrement())
  email    String
  password String
  price    Float
  expire   DateTime
  quantity Int              @default(0) // จำนวนสินค้าที่ยังมี
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  
}

model Product12months {
  id       Int              @id @default(autoincrement())
  email    String
  password String
  price    Float
  expire   DateTime
  quantity Int              @default(0) // จำนวนสินค้าที่ยังมี
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  
}

model HistoryProduct {
  id               Int                @id @default(autoincrement())
  userId           Int
  user             User               @relation(fields: [userId], references: [id]) // Foreign key to User
  productId        Int // ทำให้แน่ใจว่าเป็น Int และไม่มีการทำให้เป็น nullable
  productName      String
  amount           Int
  email            String
  password         String
  status           DateTime           // วันที่ซื้อ
  createdAt        DateTime           @default(now())
}






model Historytopup {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id]) // Foreign key to User
  transactionId  Int
  transactionName String
  amount         Int
  createdAt      DateTime @default(now())
}
